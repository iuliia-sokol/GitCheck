{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_object_spread.js","src/js/fetch.js","src/js/searchByInput.js","src/js/timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// import { key } from './hide/key';\nimport { refs } from './searchByInput';\n\nexport function fetchData(searchQuery) {\n  const url = `https://api.github.com/users/${searchQuery}`;\n  const headers = {\n    Accept: 'application/vnd.github.v3+json',\n    // Authorization: `token ${key}`,\n  };\n\n  let user = {\n    repos: [],\n    login: searchQuery,\n  };\n\n  fetch(url, { headers: headers })\n    .then(r => r.json())\n    .then(data => {\n      user = { ...user, ...data };\n      refs.spinner.classList.toggle('visually-hidden');\n      console.log(user);\n      return user;\n    })\n\n    // GET REPOS\n\n    // .then(user => {\n    //        console.log(user);\n    //        console.log(repos);\n    //   fetch(`${user.repos_url}?per_page=100`, { headers: headers })\n    //     .then(r => r.json())\n    //     .then(repos => {\n    //       console.log(user);\n    //       console.log(repos);\n    //       user.repos = repos;\n    //       return repos;\n    //     });\n\n    // TO GET COMMITS\n\n    // .then(repos => {\n    //   console.log(user);\n    //   for (let repo of repos) {\n    //     let url = `${repo.url}/commits?per_page=100`;\n    //     fetch(url, { headers: headers })\n    //       .then(r => r.json())\n    //       .then(commit => {\n    //         let filteredData = [];\n    //         commit.forEach(com => {\n    //           // console.log(com.commit);\n    //           // console.log(com.author.login);\n    //           // console.log(user.id);\n    //           if (com.author == null) {\n    //             return;\n    //           }\n\n    //           if (\n    //             com.author.id === user.id ||\n    //             com.author.login === user.login ||\n    //             com.commit.author.login === user.login ||\n    //             com.commit.author.name === user.name ||\n    //             com.commit.author.email === user.email\n    //           ) {\n    //             // console.log(com.author.login);\n\n    //             filteredData.push(com);\n    //             return filteredData;\n    //           }\n\n    //           return;\n    //         });\n    //         repo.commits = [...filteredData];\n    //         return commit;\n    //       })\n    //       .then(commit => {\n    //         if (commit.length >= 100) {\n    //           for (let i = 1; i < 571; i++) {\n    //             let url = `${repo.url}/commits?per_page=100?page=${i + 1}`;\n    //             fetch(url, { headers: headers })\n    //               .then(r => r.json())\n    //               .then(commit => {\n    //                 let filteredData = [];\n    //                 commit.forEach(com => {\n    //                   // if (com.author == null) {\n    //                   //   return;\n    //                   // }\n\n    //                   if (\n    //                     com.author.id === user.id ||\n    //                     com.author.login === user.login ||\n    //                     com.commit.author.login === user.login ||\n    //                     com.commit.author.name === user.name ||\n    //                     com.commit.author.email === user.email\n    //                   ) {\n    //                     // console.log(com.author.login);\n    //                     filteredData.push(com);\n    //                     return filteredData;\n    //                   }\n    //                   return filteredData;\n    //                 });\n    //                 repo.commits = [...repo.commits, ...filteredData];\n    //                 // console.log(repo.commits);\n    //                 return commit;\n    //               });\n    //             return;\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n\n    // })\n    .catch(er => console.error(er));\n}\n","// import { Tooltip as Tooltip, Toast as Toast, Popover as Popover } from 'bootstrap';\n\nimport { fetchData } from './fetch';\n\nexport const refs = {\n  form: document.querySelector('.form'),\n  spinner: document.querySelector('.spinner'),\n  nick: document.querySelector('[data-nick]'),\n  name: document.querySelector('[data-name]'),\n  status: document.querySelector('[data-status]'),\n  location: document.querySelector('[data-location]'),\n  following: document.querySelector('[data-following]'),\n  followers: document.querySelector('[data-followers]'),\n  years: document.querySelector('[data-years]'),\n  months: document.querySelector('[data-months]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  repos: document.querySelector('[data-repos]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const searchQuery = event.currentTarget.elements.input.value;\n  timer.start();\n  // console.dir(refs.spinner);\n  refs.spinner.classList.remove('visually-hidden');\n  fetchData(searchQuery);\n}\n","import { refs } from './searchByInput';\n\nconst date = Date.now();\nlet setDate = {};\n\nconst timer = {\n  intervalID: null,\n  start(date) {\n    const startTimer = date;\n\n    this.intervalID = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = startTimer - currentTime;\n      const { days, hours, minutes, seconds } = convertMs(deltaTime);\n      if (deltaTime <= 1000) {\n        this.stop();\n      }\n      refs.days.textContent = `${days}`;\n      refs.hours.textContent = `${hours}`;\n      refs.minutes.textContent = `${minutes}`;\n      refs.seconds.textContent = `${seconds}`;\n    }, 1000);\n  },\n\n  stop() {\n    clearInterval(this.intervalID);\n\n    return;\n  },\n};\n\nlet diff = Date.now() - Date.parse('July 3, 2005');\n\nfunction convertMs(ms) {\n  let seconds = Math.floor(ms / 1000),\n    minutes = Math.floor(seconds / 60),\n    hours = Math.floor(minutes / 60),\n    days = Math.floor(hours / 24),\n    months = Math.floor(days / 30),\n    years = Math.floor(days / 365);\n\n  seconds = addLeadingZero((seconds %= 60));\n  minutes = addLeadingZero((minutes %= 60));\n  hours = addLeadingZero((hours %= 24));\n  days = addLeadingZero((days %= 30));\n  months = addLeadingZero((months %= 12));\n  years = addLeadingZero(years);\n\n  return { years, months, days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconsole.log(convertMs(diff));\n"],"names":["Object","defineProperty","module","exports","value","default","obj","key","enumerable","configurable","writable","$9eddae5a012cde57$exports","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$9eddae5a012cde57$var$_defineProperty","parcelRequire","__esModule","$3d3e7ba3cf1cf643$export$8134c072fddab6a5","searchQuery","url","user","repos","login","fetch","headers","Accept","then","r","json","data","$parcel$interopDefault","$a56e015eca7d987e$export$21666b427502ea6d","spinner","classList","toggle","console","log","catch","er","error","form","document","querySelector","nick","name","status","location","following","followers","years","months","days","hours","minutes","seconds","addEventListener","event","preventDefault","currentTarget","elements","input","timer","start","remove","Date","now","$67b5ad8caac4e087$var$diff","parse","$67b5ad8caac4e087$var$convertMs","ms","Math","floor","$67b5ad8caac4e087$var$addLeadingZero","String","padStart"],"version":3,"file":"index.7b4643d0.js.map"}