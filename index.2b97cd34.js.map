{"mappings":"AAGO,SAASA,EAAUC,GAOxB,IAAIC,EAAO,CACTC,MAAO,GACPC,MAAOH,GAGTI,MAXY,gCAAgCJ,IAWjC,CAAEK,QAVG,CACdC,OAAQ,oCAUPC,MAAKC,GAAKA,EAAEC,SACZF,MAAKG,IACJT,EAAO,IAAKA,KAASS,GACrBC,EAAKC,QAAQC,UAAUC,OAAO,mBAC9BC,QAAQC,IAAIf,GACLA,KA2FRgB,OAAMC,GAAMH,QAAQI,MAAMD,I,CC5GxB,MAAMP,EAAO,CAClBS,KAAMC,SAASC,cAAc,SAC7BV,QAASS,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,eAC7BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,iBAC/BI,SAAUL,SAASC,cAAc,mBACjCK,UAAWN,SAASC,cAAc,oBAClCM,UAAWP,SAASC,cAAc,oBAClCO,MAAOR,SAASC,cAAc,gBAC9BQ,OAAQT,SAASC,cAAc,iBAC/BS,KAAMV,SAASC,cAAc,eAC7BU,MAAOX,SAASC,cAAc,gBAC9BW,QAASZ,SAASC,cAAc,kBAChCY,QAASb,SAASC,cAAc,kBAChCpB,MAAOmB,SAASC,cAAc,iBAGhCX,EAAKS,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,MAAMrC,EAAcoC,EAAME,cAAcC,SAASC,MAAMC,MACvDC,MAAMC,QAENhC,EAAKC,QAAQC,UAAU+B,OAAO,mBAC9B7C,EAAUC,E,IC5BC6C,KAAKC,MA6BlB,IAAIC,EAAOF,KAAKC,MAAQD,KAAKG,MAAM,gBAEnC,SAASC,EAAUC,GACjB,IAAIhB,EAAUiB,KAAKC,MAAMF,EAAK,KAC5BjB,EAAUkB,KAAKC,MAAMlB,EAAU,IAC/BF,EAAQmB,KAAKC,MAAMnB,EAAU,IAC7BF,EAAOoB,KAAKC,MAAMpB,EAAQ,IAC1BF,EAASqB,KAAKC,MAAMrB,EAAO,IAC3BF,EAAQsB,KAAKC,MAAMrB,EAAO,KAS5B,OAPAG,EAAUmB,EAAgBnB,GAAW,IACrCD,EAAUoB,EAAgBpB,GAAW,IACrCD,EAAQqB,EAAgBrB,GAAS,IACjCD,EAAOsB,EAAgBtB,GAAQ,IAC/BD,EAASuB,EAAgBvB,GAAU,IACnCD,EAAQwB,EAAexB,GAEhB,C,MAAEA,E,OAAOC,E,KAAQC,E,MAAMC,E,QAAOC,E,QAASC,E,CAGhD,SAASmB,EAAeZ,GACtB,OAAOa,OAAOb,GAAOc,SAAS,EAAG,I,CAGnCxC,QAAQC,IAAIiC,EAAUF","sources":["src/js/fetch.js","src/js/searchByInput.js","src/js/timer.js"],"sourcesContent":["// import { key } from './hide/key';\nimport { refs } from './searchByInput';\n\nexport function fetchData(searchQuery) {\n  const url = `https://api.github.com/users/${searchQuery}`;\n  const headers = {\n    Accept: 'application/vnd.github.v3+json',\n    // Authorization: `token ${key}`,\n  };\n\n  let user = {\n    repos: [],\n    login: searchQuery,\n  };\n\n  fetch(url, { headers: headers })\n    .then(r => r.json())\n    .then(data => {\n      user = { ...user, ...data };\n      refs.spinner.classList.toggle('visually-hidden');\n      console.log(user);\n      return user;\n    })\n\n    // GET REPOS\n\n    // .then(user => {\n    //        console.log(user);\n    //        console.log(repos);\n    //   fetch(`${user.repos_url}?per_page=100`, { headers: headers })\n    //     .then(r => r.json())\n    //     .then(repos => {\n    //       console.log(user);\n    //       console.log(repos);\n    //       user.repos = repos;\n    //       return repos;\n    //     });\n\n    // TO GET COMMITS\n\n    // .then(repos => {\n    //   console.log(user);\n    //   for (let repo of repos) {\n    //     let url = `${repo.url}/commits?per_page=100`;\n    //     fetch(url, { headers: headers })\n    //       .then(r => r.json())\n    //       .then(commit => {\n    //         let filteredData = [];\n    //         commit.forEach(com => {\n    //           // console.log(com.commit);\n    //           // console.log(com.author.login);\n    //           // console.log(user.id);\n    //           if (com.author == null) {\n    //             return;\n    //           }\n\n    //           if (\n    //             com.author.id === user.id ||\n    //             com.author.login === user.login ||\n    //             com.commit.author.login === user.login ||\n    //             com.commit.author.name === user.name ||\n    //             com.commit.author.email === user.email\n    //           ) {\n    //             // console.log(com.author.login);\n\n    //             filteredData.push(com);\n    //             return filteredData;\n    //           }\n\n    //           return;\n    //         });\n    //         repo.commits = [...filteredData];\n    //         return commit;\n    //       })\n    //       .then(commit => {\n    //         if (commit.length >= 100) {\n    //           for (let i = 1; i < 571; i++) {\n    //             let url = `${repo.url}/commits?per_page=100?page=${i + 1}`;\n    //             fetch(url, { headers: headers })\n    //               .then(r => r.json())\n    //               .then(commit => {\n    //                 let filteredData = [];\n    //                 commit.forEach(com => {\n    //                   // if (com.author == null) {\n    //                   //   return;\n    //                   // }\n\n    //                   if (\n    //                     com.author.id === user.id ||\n    //                     com.author.login === user.login ||\n    //                     com.commit.author.login === user.login ||\n    //                     com.commit.author.name === user.name ||\n    //                     com.commit.author.email === user.email\n    //                   ) {\n    //                     // console.log(com.author.login);\n    //                     filteredData.push(com);\n    //                     return filteredData;\n    //                   }\n    //                   return filteredData;\n    //                 });\n    //                 repo.commits = [...repo.commits, ...filteredData];\n    //                 // console.log(repo.commits);\n    //                 return commit;\n    //               });\n    //             return;\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n\n    // })\n    .catch(er => console.error(er));\n}\n","// import { Tooltip as Tooltip, Toast as Toast, Popover as Popover } from 'bootstrap';\n\nimport { fetchData } from './fetch';\n\nexport const refs = {\n  form: document.querySelector('.form'),\n  spinner: document.querySelector('.spinner'),\n  nick: document.querySelector('[data-nick]'),\n  name: document.querySelector('[data-name]'),\n  status: document.querySelector('[data-status]'),\n  location: document.querySelector('[data-location]'),\n  following: document.querySelector('[data-following]'),\n  followers: document.querySelector('[data-followers]'),\n  years: document.querySelector('[data-years]'),\n  months: document.querySelector('[data-months]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n  repos: document.querySelector('[data-repos]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const searchQuery = event.currentTarget.elements.input.value;\n  timer.start();\n  // console.dir(refs.spinner);\n  refs.spinner.classList.remove('visually-hidden');\n  fetchData(searchQuery);\n}\n","import { refs } from './searchByInput';\n\nconst date = Date.now();\nlet setDate = {};\n\nconst timer = {\n  intervalID: null,\n  start(date) {\n    const startTimer = date;\n\n    this.intervalID = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = startTimer - currentTime;\n      const { days, hours, minutes, seconds } = convertMs(deltaTime);\n      if (deltaTime <= 1000) {\n        this.stop();\n      }\n      refs.days.textContent = `${days}`;\n      refs.hours.textContent = `${hours}`;\n      refs.minutes.textContent = `${minutes}`;\n      refs.seconds.textContent = `${seconds}`;\n    }, 1000);\n  },\n\n  stop() {\n    clearInterval(this.intervalID);\n\n    return;\n  },\n};\n\nlet diff = Date.now() - Date.parse('July 3, 2005');\n\nfunction convertMs(ms) {\n  let seconds = Math.floor(ms / 1000),\n    minutes = Math.floor(seconds / 60),\n    hours = Math.floor(minutes / 60),\n    days = Math.floor(hours / 24),\n    months = Math.floor(days / 30),\n    years = Math.floor(days / 365);\n\n  seconds = addLeadingZero((seconds %= 60));\n  minutes = addLeadingZero((minutes %= 60));\n  hours = addLeadingZero((hours %= 24));\n  days = addLeadingZero((days %= 30));\n  months = addLeadingZero((months %= 12));\n  years = addLeadingZero(years);\n\n  return { years, months, days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconsole.log(convertMs(diff));\n"],"names":["$924b66e829bc1184$export$8134c072fddab6a5","searchQuery","user","repos","login","fetch","headers","Accept","then","r","json","data","$7c6e49fc3e67d0d6$export$21666b427502ea6d","spinner","classList","toggle","console","log","catch","er","error","form","document","querySelector","nick","name","status","location","following","followers","years","months","days","hours","minutes","seconds","addEventListener","event","preventDefault","currentTarget","elements","input","value","timer","start","remove","Date","now","$7e81353768b819eb$var$diff","parse","$7e81353768b819eb$var$convertMs","ms","Math","floor","$7e81353768b819eb$var$addLeadingZero","String","padStart"],"version":3,"file":"index.2b97cd34.js.map"}